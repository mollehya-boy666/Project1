name: Android APK Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
      ANDROID_HOME: ${{ runner.workspace }}/android-sdk

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11

      # Step 3: Install Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Step 4: Download Android SDK tools
      - name: Download Android Command Line Tools
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip
          unzip commandlinetools-linux-*.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

      # Step 5: Accept Android SDK licenses and install platforms and build tools
      - name: Install Android SDK components
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

      # Step 6: Install Cordova
      - name: Install Cordova
        run: npm install -g cordova

      # Step 7: Install project dependencies
      - name: Install Node.js dependencies
        run: npm install

      # Step 8: Build the APK
      - name: Build Android APK
        run: |
          npx cordova platform add android
          npx cordova build android --release

      # Step 9: Upload APK as a GitHub Actions artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: MyApp-release.apk
          path: platforms/android/app/build/outputs/apk/release/app-release-unsigned.apk
